<Page
    x:Class="TVShowTime.UWP.Views.EpisodePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TVShowTime.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls" 
    xmlns:localcontrols="using:TVShowTime.UWP.Controls" 
    xmlns:behaviors="using:Microsoft.Toolkit.Uwp.UI.Animations.Behaviors" 
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    DataContext="{Binding Episode, Source={StaticResource Locator}}"
    NavigationCacheMode="Required">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SmallScreenWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShowNameText.FontSize" Value="20" />
                        <Setter Target="EpisodeNameText.FontSize" Value="28" />

                        <Setter Target="PreviousEpisodeColumn.Width" Value="50" />
                        <Setter Target="NextEpisodeColumn.Width" Value="50" />

                        <Setter Target="DescriptionPanel.Padding" Value="20" />
                        <Setter Target="OverviewText.FontSize" Value="14" />

                        <Setter Target="GoodEmotionImage.Width" Value="24" />
                        <Setter Target="GoodEmotionImage.Height" Value="24" />
                        <Setter Target="GoodEmotionImage.Margin" Value="2" />

                        <Setter Target="FunEmotionImage.Width" Value="24" />
                        <Setter Target="FunEmotionImage.Height" Value="24" />
                        <Setter Target="FunEmotionImage.Margin" Value="2" />

                        <Setter Target="WowEmotionImage.Width" Value="24" />
                        <Setter Target="WowEmotionImage.Height" Value="24" />
                        <Setter Target="WowEmotionImage.Margin" Value="2" />

                        <Setter Target="SadEmotionImage.Width" Value="24" />
                        <Setter Target="SadEmotionImage.Height" Value="24" />
                        <Setter Target="SadEmotionImage.Margin" Value="2" />

                        <Setter Target="SosoEmotionImage.Width" Value="24" />
                        <Setter Target="SosoEmotionImage.Height" Value="24" />
                        <Setter Target="SosoEmotionImage.Margin" Value="2" />

                        <Setter Target="BadEmotionImage.Width" Value="24" />
                        <Setter Target="BadEmotionImage.Height" Value="24" />
                        <Setter Target="BadEmotionImage.Margin" Value="2" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumScreenWidth}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!-- Background image -->
        <Grid>
            <controls:ImageEx x:Name="BackgroundImage" 
                              Source="{x:Bind Path=ViewModel.Episode.Images.Screen.One, Mode=OneWay}"
                              IsCacheEnabled="True"
                              PlaceholderSource="/Images/default-poster.png"
                              VerticalAlignment="Center" HorizontalAlignment="Center"
                              Stretch="UniformToFill" PlaceholderStretch="UniformToFill" />

            <interactivity:Interaction.Behaviors>
                <behaviors:Blur Value="15" />
            </interactivity:Interaction.Behaviors>
        </Grid>

        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <!-- Header (show name, episode name, watch button, ...) -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition x:Name="PreviousEpisodeColumn" Width="60" />
                        <ColumnDefinition />
                        <ColumnDefinition x:Name="NextEpisodeColumn" Width="60" />
                    </Grid.ColumnDefinitions>

                    <Button x:Name="PreviousEpisodeButton"
                            Grid.Column="0"
                            FontSize="24" FontWeight="Bold"
                            FontFamily="Segoe MDL2 Assets" Content="&#xE00E;"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            Visibility="{x:Bind Path=ViewModel.Episode.PreviousEpisode, Mode=OneWay, Converter={StaticResource EmptyObjectToVisibilityConverter}}"
                            Command="{x:Bind Path=ViewModel.GoToPreviousEpisodeCommand}" />

                    <StackPanel Grid.Column="1">
                        <HyperlinkButton x:Name="ShowNameText"
                                         Content="{x:Bind Path=ViewModel.Episode.Show.Name, Mode=OneWay}"
                                         FontWeight="Bold" Margin="5"
                                         HorizontalAlignment="Center"
                                         FontSize="48" FontStyle="Normal"
                                         Foreground="{StaticResource PrimaryWhite}"
                                         Style="{StaticResource TitleLinkStyle}"
                                         Command="{x:Bind Path=ViewModel.SelectShowCommand}"
                                         CommandParameter="{x:Bind Path=ViewModel.Episode, Mode=OneWay}" />

                        <TextBlock x:Name="EpisodeNameText" 
                                   Text="{x:Bind Path=ViewModel.Episode.Name, Mode=OneWay}"
                                   Style="{StaticResource SubheaderTextBlockStyle}"
                                   FontWeight="SemiLight" Margin="5" HorizontalAlignment="Center"
                                   TextAlignment="Center"
                                   Foreground="{StaticResource PrimaryWhite}" />

                        <TextBlock Style="{StaticResource SubtitleTextBlockStyle}"
                                   Margin="5" HorizontalAlignment="Center"
                                   TextAlignment="Center"
                                   Foreground="{StaticResource PrimaryWhite}">
                            <Run Text="Season" />
                            <Run Text="{x:Bind Path=ViewModel.Episode.Season, Mode=OneWay}" />
                            <Run Text="Episode" />
                            <Run Text="{x:Bind Path=ViewModel.Episode.Number, Mode=OneWay}" />
                        </TextBlock>

                        <ToggleButton Margin="15" FontSize="24" 
                                      localcontrols:ToggleButtonEx.IsChecked="{x:Bind Path=ViewModel.Episode.Seen, Mode=OneWay, Converter={StaticResource NullableBoolToBoolConverter}}"
                                      Command="{x:Bind Path=ViewModel.ToggleWatchCommand}"
                                      VerticalAlignment="Center" HorizontalAlignment="Center">
                            <ToggleButton.Content>
                                <Grid Padding="20 3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <TextBlock x:Name="SeenIconText"
                                               Grid.Column="0" Margin="5 4 0 0" FontWeight="Bold" FontSize="18"
                                               Visibility="{x:Bind Path=ViewModel.Episode.Seen, Mode=OneWay, Converter={StaticResource NullableBoolToVisibilityConverter}}"
                                               Text="&#xE8FB;" FontFamily="Segoe MDL2 Assets" />
                                    <TextBlock x:Name="SeenText"
                                               Grid.Column="1" Margin="15 0" FontWeight="SemiBold" FontSize="18"
                                               Visibility="{x:Bind Path=ViewModel.Episode.Seen, Mode=OneWay, Converter={StaticResource NullableBoolToVisibilityConverter}}"
                                               Text="Watched!" />

                                    <TextBlock x:Name="UnseenIconText"
                                               Grid.Column="0" Margin="5 4 0 0" FontWeight="Bold" FontSize="18"
                                               Visibility="{x:Bind Path=ViewModel.Episode.Seen, Mode=OneWay, Converter={StaticResource NullableBoolInvertedToVisibilityConverter}}"
                                               Text="&#xE052;" FontFamily="Segoe MDL2 Assets" />
                                    <TextBlock x:Name="UnseenText"
                                               Grid.Column="1" Margin="15 0" FontWeight="SemiBold" FontSize="18"
                                               Visibility="{x:Bind Path=ViewModel.Episode.Seen, Mode=OneWay, Converter={StaticResource NullableBoolInvertedToVisibilityConverter}}"
                                               Text="Watched?" />
                                </Grid>
                            </ToggleButton.Content>
                        </ToggleButton>
                    </StackPanel>

                    <Button x:Name="NextEpisodeButton"
                            Grid.Column="2"
                            FontSize="24" FontWeight="Bold"
                            FontFamily="Segoe MDL2 Assets" Content="&#xE00F;"
                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            Visibility="{x:Bind Path=ViewModel.Episode.NextEpisode, Mode=OneWay, Converter={StaticResource EmptyObjectToVisibilityConverter}}"
                            Command="{x:Bind Path=ViewModel.GoToNextEpisodeCommand}" />
                </Grid>

                <!-- Description (air date, overview) -->
                <Grid>
                    <Grid x:Name="FrostedGlassPanel" />

                    <StackPanel x:Name="DescriptionPanel" Padding="40">
                        <TextBlock Foreground="{StaticResource PrimaryBlack}" FontWeight="Bold">
                            <Run Text="Aired on" />
                            <Run Text="{x:Bind Path=ViewModel.Episode.Network, Mode=OneWay}" />
                            <Run Text="the" />
                            <Run Text="{x:Bind Path=ViewModel.Episode.AirDate, Mode=OneWay}" />
                        </TextBlock>

                        <TextBlock x:Name="OverviewText" Text="{x:Bind Path=ViewModel.Episode.Overview, Mode=OneWay}"
                                   Margin="0 10 0 0"
                                   TextWrapping="WrapWholeWords"
                                   Foreground="{StaticResource PrimaryBlack}" />
                    </StackPanel>
                </Grid>

                <!-- Emotion -->
                <StackPanel x:Name="EmotionPanel"
                            Orientation="Horizontal" 
                            Margin="10"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Visibility="{x:Bind Path=ViewModel.Episode.Seen, Mode=OneWay, Converter={StaticResource NullableBoolToVisibilityConverter}}">
                    <ToggleButton x:Name="GoodEmotionButton" 
                                  Margin="5" Style="{StaticResource RoundToggleButton}"
                                  localcontrols:ToggleButtonEx.IsChecked="{x:Bind Path=ViewModel.Episode.Emotion.Id, Mode=OneWay, Converter={StaticResource EmotionValueToBoolConverter}, ConverterParameter={Binding Path=Episode.GoodEmotion, Source={StaticResource Locator}}}"
                                  Command="{x:Bind Path=ViewModel.ToggleEmotionCommand}" CommandParameter="{x:Bind Path=ViewModel.GoodEmotion, Mode=OneWay}">
                        <ToggleButton.Content>
                            <Image x:Name="GoodEmotionImage" 
                                   Margin="5" Source="/Images/Emoji/ok_hand.png" Width="60" Height="60" />
                        </ToggleButton.Content>

                        <ToolTipService.ToolTip>
                            <TextBlock Text="GOOD" />
                        </ToolTipService.ToolTip>
                    </ToggleButton>

                    <ToggleButton x:Name="FunEmotionButton" 
                                  Margin="5" Style="{StaticResource RoundToggleButton}"
                                  localcontrols:ToggleButtonEx.IsChecked="{x:Bind Path=ViewModel.Episode.Emotion.Id, Mode=OneWay, Converter={StaticResource EmotionValueToBoolConverter}, ConverterParameter={Binding Path=Episode.FunEmotion, Source={StaticResource Locator}}}"
                                  Command="{x:Bind Path=ViewModel.ToggleEmotionCommand}" CommandParameter="{x:Bind Path=ViewModel.FunEmotion, Mode=OneWay}">
                        <ToggleButton.Content>
                            <Image x:Name="FunEmotionImage" 
                                   Margin="5" Source="/Images/Emoji/smile.png" Width="60" Height="60" />
                        </ToggleButton.Content>

                        <ToolTipService.ToolTip>
                            <TextBlock Text="FUN" />
                        </ToolTipService.ToolTip>
                    </ToggleButton>

                    <ToggleButton x:Name="WowEmotionButton" 
                                  Margin="5" Style="{StaticResource RoundToggleButton}"
                                  localcontrols:ToggleButtonEx.IsChecked="{x:Bind Path=ViewModel.Episode.Emotion.Id, Mode=OneWay, Converter={StaticResource EmotionValueToBoolConverter}, ConverterParameter={Binding Path=Episode.WowEmotion, Source={StaticResource Locator}}}"
                                  Command="{x:Bind Path=ViewModel.ToggleEmotionCommand}" CommandParameter="{x:Bind Path=ViewModel.WowEmotion, Mode=OneWay}">
                        <ToggleButton.Content>
                            <Image x:Name="WowEmotionImage"
                                   Margin="5" Source="/Images/Emoji/astonished.png" Width="60" Height="60" />
                        </ToggleButton.Content>

                        <ToolTipService.ToolTip>
                            <TextBlock Text="WOW" />
                        </ToolTipService.ToolTip>
                    </ToggleButton>

                    <ToggleButton x:Name="SadEmotionButton" 
                                  Margin="5" Style="{StaticResource RoundToggleButton}"
                                  localcontrols:ToggleButtonEx.IsChecked="{x:Bind Path=ViewModel.Episode.Emotion.Id, Mode=OneWay, Converter={StaticResource EmotionValueToBoolConverter}, ConverterParameter={Binding Path=Episode.SadEmotion, Source={StaticResource Locator}}}"
                                  Command="{x:Bind Path=ViewModel.ToggleEmotionCommand}" CommandParameter="{x:Bind Path=ViewModel.SadEmotion, Mode=OneWay}">
                        <ToggleButton.Content>
                            <Image x:Name="SadEmotionImage"
                                   Margin="5" Source="/Images/Emoji/cry.png" Width="60" Height="60" />
                        </ToggleButton.Content>

                        <ToolTipService.ToolTip>
                            <TextBlock Text="SAD" />
                        </ToolTipService.ToolTip>
                    </ToggleButton>

                    <ToggleButton x:Name="SosoEmotionButton" 
                                  Margin="5" Style="{StaticResource RoundToggleButton}"
                                  localcontrols:ToggleButtonEx.IsChecked="{x:Bind Path=ViewModel.Episode.Emotion.Id, Mode=OneWay, Converter={StaticResource EmotionValueToBoolConverter}, ConverterParameter={Binding Path=Episode.SosoEmotion, Source={StaticResource Locator}}}"
                                  Command="{x:Bind Path=ViewModel.ToggleEmotionCommand}" CommandParameter="{x:Bind Path=ViewModel.SosoEmotion, Mode=OneWay}">
                        <ToggleButton.Content>
                            <Image x:Name="SosoEmotionImage"
                                   Margin="5" Source="/Images/Emoji/sleeping.png" Width="60" Height="60" />
                        </ToggleButton.Content>

                        <ToolTipService.ToolTip>
                            <TextBlock Text="SO-SO" />
                        </ToolTipService.ToolTip>
                    </ToggleButton>

                    <ToggleButton x:Name="BadEmotionButton" 
                                  Margin="5" Style="{StaticResource RoundToggleButton}"
                                  localcontrols:ToggleButtonEx.IsChecked="{x:Bind Path=ViewModel.Episode.Emotion.Id, Mode=OneWay, Converter={StaticResource EmotionValueToBoolConverter}, ConverterParameter={Binding Path=Episode.BadEmotion, Source={StaticResource Locator}}}"
                                  Command="{x:Bind Path=ViewModel.ToggleEmotionCommand}" CommandParameter="{x:Bind Path=ViewModel.BadEmotion, Mode=OneWay}">
                        <ToggleButton.Content>
                            <Image x:Name="BadEmotionImage"
                                   Margin="5" Source="/Images/Emoji/thumbsdown.png" Width="60" Height="60" />
                        </ToggleButton.Content>

                        <ToolTipService.ToolTip>
                            <TextBlock Text="BAD" />
                        </ToolTipService.ToolTip>
                    </ToggleButton>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
